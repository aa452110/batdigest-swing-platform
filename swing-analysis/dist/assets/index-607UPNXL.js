const y=new Error("failed to get response body reader"),h=new Error("failed to complete download"),p="Content-Length",u=e=>new Promise((t,a)=>{const r=new FileReader;r.onload=()=>{const{result:n}=r;n instanceof ArrayBuffer?t(new Uint8Array(n)):t(new Uint8Array)},r.onerror=n=>{a(Error(`File could not be read! Code=${n?.target?.error?.code||-1}`))},r.readAsArrayBuffer(e)}),R=async e=>{let t;if(typeof e=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(e)?t=atob(e.split(",")[1]).split("").map(a=>a.charCodeAt(0)):t=await(await fetch(e)).arrayBuffer();else if(e instanceof URL)t=await(await fetch(e)).arrayBuffer();else if(e instanceof File||e instanceof Blob)t=await u(e);else return new Uint8Array;return new Uint8Array(t)},E=async e=>new Promise(t=>{const a=document.createElement("script"),r=()=>{a.removeEventListener("load",r),t()};a.src=e,a.type="text/javascript",a.addEventListener("load",r),document.getElementsByTagName("head")[0].appendChild(a)}),g=async(e,t)=>{const a=await fetch(e);let r;try{const n=parseInt(a.headers.get(p)||"-1"),c=a.body?.getReader();if(!c)throw y;const l=[];let s=0;for(;;){const{done:o,value:d}=await c.read(),i=d?d.length:0;if(o){if(n!=-1&&n!==s)throw h;t&&t({url:e,total:n,received:s,delta:i,done:o});break}l.push(d),s+=i,t&&t({url:e,total:n,received:s,delta:i,done:o})}const f=new Uint8Array(s);let w=0;for(const o of l)f.set(o,w),w+=o.length;r=f.buffer}catch(n){console.log("failed to send download progress event: ",n),r=await a.arrayBuffer(),t&&t({url:e,total:r.byteLength,received:r.byteLength,delta:0,done:!0})}return r},b=async(e,t,a=!1,r)=>{const n=a?await g(e,r):await(await fetch(e)).arrayBuffer(),c=new Blob([n],{type:t});return URL.createObjectURL(c)};export{g as downloadWithProgress,R as fetchFile,E as importScript,b as toBlobURL};
